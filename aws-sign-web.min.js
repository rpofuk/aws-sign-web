/**
 * AWS Signature v4 Implementation for Web Browsers
 *
 * Copyright (c) 2016-2018 Daniel Joos
 *
 * Distributed under MIT license. (See file LICENSE)
 */
!function(e,t){"function"==typeof define&&define.amd?define(["crypto-js/core","crypto-js/sha256","crypto-js/hmac-sha256"],t):"object"==typeof module&&module.exports?module.exports=t(require("crypto-js/core"),require("crypto-js/sha256"),require("crypto-js/hmac-sha256")):e.awsSignWeb=t(CryptoJS,CryptoJS.SHA256,CryptoJS.HmacSHA256)}(this,function(n){"use strict";function e(e){this.config=c({},t,e),this.payloadSerializer=this.config.payloadSerializer||this.config.payloadSerializerFactory(),this.uriParser=this.config.uriParserFactory(),this.hasher=this.config.hasherFactory(),r(this.config.accessKeyId,"AwsSigner requires AWS AccessKeyID"),r(this.config.secretAccessKey,"AwsSigner requires AWS SecretAccessKey")}var t={region:"eu-west-1",service:"execute-api",defaultContentType:"application/json",defaultAcceptType:"application/json",payloadSerializerFactory:function(){return function(e){return JSON.stringify(e)}},uriParserFactory:function(){var t=document?document.createElement("a"):{};return function(e){return t.href=e,{protocol:t.protocol,host:t.host.replace(/^(.*):((80)|(443))$/,"$1"),path:("/"!==t.pathname.charAt(0)?"/":"")+decodeURI(t.pathname),queryParams:(e=t.search,/^\??(.*)$/.exec(e)[1].split("&").reduce(function(e,t){var r;return(t=/^(.+?)=(.*)$/.exec(t))&&(e[r=decodeURI(t[1])]=(void 0!==e[r]&&e[r]instanceof Array?e[r]:[]).concat(decodeURI(t[2]))),e},{}))}}},hasherFactory:function(){return{hash:function(e,t){t=c({hexOutput:!0,textInput:!0},t);e=n.SHA256(e);return t.hexOutput?e.toString(n.enc.Hex):e},hmac:function(e,t,r){r=c({hexOutput:!0,textInput:!0},r);e=n.HmacSHA256(t,e,{asBytes:!0});return r.hexOutput?e.toString(n.enc.Hex):e}}}};function s(e,t){e=e.toISOString().replace(/[:\-]|\.\d{3}/g,"").substr(0,17);return t?e.substr(0,8):e}function i(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function c(n){return[].slice.call(arguments,1).forEach(function(r){r&&"object"==typeof r&&Object.keys(r).forEach(function(e){var t=r[e];void 0!==t&&(null!==t&&"object"==typeof t?(n[e]=Array.isArray(t)?[]:{},c(n[e],t)):n[e]=t)})}),n}function r(e,t){if(void 0===e||!e)throw new Error(t)}return e.prototype.sign=function(e,t){var r,n,o,a={request:c({},e),signDate:t||new Date,uri:this.uriParser(e.url)};return function(e,r){var t={host:r.uri.host,"content-type":e.config.defaultContentType,accept:e.config.defaultAcceptType,"x-amz-date":s(r.signDate)};e.config.defaultAcceptType||delete t.accept;e.config.defaultContentType||delete t["content-type"];r.request.method=r.request.method.toUpperCase(),r.request.body?r.payload=r.request.body:r.request.data&&e.payloadSerializer?r.payload=e.payloadSerializer(r.request.data):delete t["content-type"];r.request.headers=c(t,Object.keys(r.request.headers||{}).reduce(function(e,t){return e[t.toLowerCase()]=r.request.headers[t],e},{})),r.sortedHeaderKeys=Object.keys(r.request.headers).sort(),r.request.headers["content-type"]&&(r.request.headers["content-type"]=r.request.headers["content-type"].split(";")[0]);"object"==typeof r.request.params&&c(r.uri.queryParams,r.request.params)}(this,a),r=this,(n=a).signedHeaders=n.sortedHeaderKeys.map(function(e){return e.toLowerCase()}).join(";"),n.canonicalRequest=String(n.request.method).toUpperCase()+"\n"+n.uri.path.split("/").map(function(e){return e=e,"s3"!==r.config.service?i(i(e)):i(e)}).join("/")+"\n"+function r(e){return e.reduce(function(e,t){return e.concat(Array.isArray(t)?r(t):t)},[])}(Object.keys(n.uri.queryParams).sort().map(function(t){return n.uri.queryParams[t].sort().map(function(e){return encodeURIComponent(t)+"="+i(e)})})).join("&")+"\n"+n.sortedHeaderKeys.map(function(e){return e.toLocaleLowerCase()+":"+n.request.headers[e]}).join("\n")+"\n\n"+n.signedHeaders+"\n"+r.hasher.hash(n.payload||""),o=this,(t=a).credentialScope=[s(t.signDate,!0),o.config.region,o.config.service,"aws4_request"].join("/"),t.stringToSign="AWS4-HMAC-SHA256\n"+s(t.signDate)+"\n"+t.credentialScope+"\n"+o.hasher.hash(t.canonicalRequest),e=a,o=(t=(o=this).hasher.hmac)(t(t(t("AWS4"+o.config.secretAccessKey,s(e.signDate,!0),{hexOutput:!1}),o.config.region,{hexOutput:!1,textInput:!1}),o.config.service,{hexOutput:!1,textInput:!1}),"aws4_request",{hexOutput:!1,textInput:!1}),e.signature=t(o,e.stringToSign,{textInput:!1}),a.authorization="AWS4-HMAC-SHA256 Credential="+this.config.accessKeyId+"/"+a.credentialScope+", SignedHeaders="+a.signedHeaders+", Signature="+a.signature,{Accept:a.request.headers.accept,Authorization:a.authorization,"Content-Type":a.request.headers["content-type"],"x-amz-date":a.request.headers["x-amz-date"],"x-amz-security-token":this.config.sessionToken||void 0}},{AwsSigner:e}});